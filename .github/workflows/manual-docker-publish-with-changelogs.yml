# Manually triggers a workflow that builds a Docker image and publishes it to Docker Hub with changelogs.

name: Manually Publish Docker Image With Changelogs

on: workflow_dispatch

jobs:
  variables:
    name: Gather Variables
    runs-on: ubuntu-20.04
    outputs:
      version: ${{steps.version.outputs.SQUIDWARDBOT_VERSION}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Get Version
        id: version
        uses: christian-draeger/read-properties@1.1.0
        with:
          path: './gradle.properties'
          properties: 'SQUIDWARDBOT_VERSION'

      - name: Print Semantic Versioning
        run: echo ${{steps.version.outputs.SQUIDWARDBOT_VERSION}}
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Find Current Tag
        id: current_tag
        uses: jimschubert/query-tag-action@v1
        with:
          include: 'v*'
          exclude: '*-rc'
          commit-ish: '@'
          skip-unshallow: true

      - name: Find Previous Tag
        id: previous_tag
        uses: jimschubert/query-tag-action@v1
        with:
          include: 'v*'
          exclude: ${{steps.current_tag.outputs.tag}}
          skip-unshallow: true

      - name: Generate changlog
        uses: jimschubert/beast-changelog-action@v1
        with:
          GITHUB_TOKEN: ${{github.token}}
          CONFIG_LOCATION: .github/changelog_config.json
          FROM: ${{steps.previous_tag.outputs.tag}}
          TO: ${{steps.current_tag.outputs.tag}}
          OUTPUT: .github/CHANGELOG.md

      - name: Read CHANGELOG file
        id: getchangelog
        run: echo "::set-output name=changelog::$(cat .github/CHANGELOG.md)"

      - name: View Changelog
        run: cat .github/CHANGELOG.md

      - name: Add Artifact
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: .github/CHANGELOG.md

  jar:
    name: Build JAR
    runs-on: ubuntu-20.04
    needs: [variables]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Grant Execute Permissions for Gradlew
        run: chmod 777 gradlew

      - name: Build Jar with Gradle
        run: ./gradlew fatJar

      - name: Output Directory Structure
        run: ls -Rla

      - name: Add Artifact
        uses: actions/upload-artifact@v3
        with:
          name: SquidwardBot-${{needs.variables.outputs.version}}
          path: ./build/libs/SquidwardBot.jar
  release-gh:
    name: Create Github Release
    runs-on: ubuntu-20.04
    needs: [variables, changelog, jar]
    steps:
      - name: Download SquidwardBot JAR
        uses: actions/download-artifact@v2
        with:
          name: SquidwardBot-${{needs.variables.outputs.version}}
          path: ./build/libs/SquidwardBot.jar
      - name: Create Github Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: v${{needs.variables.outputs.version}}
          title: Version ${{needs.variables.outputs.version}}
          prerelease: false
          files: |
            ./build/libs/SquidwardBot.jar
  docker-publish:
    name: Builds and Publishes Docker Image
    runs-on: ubuntu-20.04
    needs: [variables, changelog, jar]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Gather Docker Metadata
        id: docker_metadata
        uses: docker/metadata-action@v4
        with:
          images: theblacksquidward/squidwardbot
          tags: type=semver,pattern={{version}},value=v${{needs.variables.outputs.version}}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
